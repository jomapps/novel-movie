/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code

import type { Image, Audio, Pdf, Video } from "@boundaryml/baml"
import type { Checked, Check } from "./types"
import type {  CharacterArchetypesResponse,  ContentGuidelinesResponse,  PacingResponse,  ProjectFieldsResponse,  ReferenceResponse,  SettingResponse,  ThematicResponse,  VisualStyleResponse } from "./types"
import type * as types from "./types"

/******************************************************************************
*
*  These types are used for streaming, for when an instance of a type
*  is still being built up and any of its fields is not yet fully available.
*
******************************************************************************/

export interface StreamState<T> {
  value: T
  state: "Pending" | "Incomplete" | "Complete"
}

export namespace partial_types {
    export interface CharacterArchetypesResponse {
      protagonistType?: string | null
      supportingRoles?: string | null
      relationshipDynamics?: string | null
    }
    export interface ContentGuidelinesResponse {
      contentRestrictions?: string | null
      culturalSensitivities?: string | null
      educationalValue?: string | null
    }
    export interface PacingResponse {
      narrativeStructure?: string | null
      pacingStyle?: string | null
      climaxIntensity?: string | null
    }
    export interface ProjectFieldsResponse {
      projectTitle?: string | null
      shortDescription?: string | null
      longDescription?: string | null
    }
    export interface ReferenceResponse {
      visualReferences?: string | null
      narrativeReferences?: string | null
    }
    export interface SettingResponse {
      timePeriod?: string | null
      geographicSetting?: string | null
      socialContext?: string | null
      scale?: string | null
    }
    export interface ThematicResponse {
      moralQuestions?: string | null
      messageTakeaway?: string | null
    }
    export interface VisualStyleResponse {
      symbolicColors?: string | null
      lightingPreferences?: string | null
    }
}