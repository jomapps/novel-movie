/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code

const fileMap = {
  
  "clients.baml": "client<llm> OpenRouterClient {\n  provider openai\n  options {\n    base_url env.OPENROUTER_BASE_URL\n    api_key env.OPENROUTER_API_KEY\n    model \"anthropic/claude-sonnet-4\"\n    default_headers {\n      \"HTTP-Referer\" \"https://localhost:3000\"\n      \"X-Title\" \"Novel Movie\"\n    }\n  }\n}\n\nclient<llm> OpenRouterAdvanced {\n  provider openai\n  options {\n    base_url env.OPENROUTER_BASE_URL\n    api_key env.OPENROUTER_API_KEY\n    model \"google/gemini-2.5-pro\"\n    default_headers {\n      \"HTTP-Referer\" \"https://localhost:3000\"\n      \"X-Title\" \"Novel Movie\"\n    }\n  }\n}\n",
  "project_autofill.baml": "// Project Title Generation - Creative Writer Role\nfunction GenerateProjectTitle(\n  projectName: string,\n  movieFormat: string,\n  movieStyle: string,\n  series: string?,\n  durationUnit: int,\n  existingTitle: string?,\n  existingShortDescription: string?,\n  existingLongDescription: string?\n) -> string {\n  client OpenRouterClient\n  prompt #\"\n    You are a creative writer specializing in compelling movie titles. Your task is to generate an engaging, memorable title for a movie project.\n\n    Project Context:\n    - Project Name: {{ projectName }}\n    - Movie Format: {{ movieFormat }}\n    - Movie Style: {{ movieStyle }}\n    {% if series %}\n    - Series: {{ series }}\n    {% endif %}\n    - Duration: {{ durationUnit }} minutes\n    \n    {% if existingTitle %}\n    - Current Title: {{ existingTitle }}\n    {% endif %}\n    {% if existingShortDescription %}\n    - Short Description: {{ existingShortDescription }}\n    {% endif %}\n    {% if existingLongDescription %}\n    - Long Description: {{ existingLongDescription }}\n    {% endif %}\n\n    Guidelines:\n    - Create a title that captures the essence and tone of the project\n    - Consider the movie format and style when crafting the title\n    - Make it memorable and marketable\n    - Keep it concise but impactful\n    - Ensure it fits the genre and style specified\n    {% if series %}\n    - Consider this is part of a series: {{ series }}\n    {% endif %}\n\n    Generate only the title, no additional text or explanation.\n  \"#\n}\n\n// Short Description Generation - Marketing Content Editor Role\nfunction GenerateShortDescription(\n  projectName: string,\n  movieFormat: string,\n  movieStyle: string,\n  series: string?,\n  durationUnit: int,\n  projectTitle: string?,\n  existingShortDescription: string?,\n  existingLongDescription: string?\n) -> string {\n  client OpenRouterClient\n  prompt #\"\n    You are a marketing content editor specializing in compelling movie descriptions for promotional materials. Your task is to create a concise, engaging short description that would work for movie posters, streaming platforms, and marketing materials.\n\n    Project Context:\n    - Project Name: {{ projectName }}\n    {% if projectTitle %}\n    - Title: {{ projectTitle }}\n    {% endif %}\n    - Movie Format: {{ movieFormat }}\n    - Movie Style: {{ movieStyle }}\n    {% if series %}\n    - Series: {{ series }}\n    {% endif %}\n    - Duration: {{ durationUnit }} minutes\n    \n    {% if existingShortDescription %}\n    - Current Short Description: {{ existingShortDescription }}\n    {% endif %}\n    {% if existingLongDescription %}\n    - Long Description: {{ existingLongDescription }}\n    {% endif %}\n\n    Guidelines:\n    - Write a compelling 1-2 sentence description (50-100 words maximum)\n    - Focus on the hook that would make audiences want to watch\n    - Include the genre/style elements naturally\n    - Make it suitable for marketing materials\n    - Create intrigue without spoiling key plot points\n    - Match the tone of the specified movie style\n    {% if series %}\n    - Consider this is part of a series: {{ series }}\n    {% endif %}\n\n    Generate only the short description, no additional text or explanation.\n  \"#\n}\n\n// Long Description Generation - Movie Screenwriter Role\nfunction GenerateLongDescription(\n  projectName: string,\n  movieFormat: string,\n  movieStyle: string,\n  series: string?,\n  durationUnit: int,\n  projectTitle: string?,\n  existingShortDescription: string?,\n  existingLongDescription: string?\n) -> string {\n  client OpenRouterAdvanced\n  prompt #\"\n    You are an experienced movie screenwriter and story developer. Your task is to create a detailed, rich description that could serve as the foundation for a screenplay or detailed project synopsis.\n\n    Project Context:\n    - Project Name: {{ projectName }}\n    {% if projectTitle %}\n    - Title: {{ projectTitle }}\n    {% endif %}\n    - Movie Format: {{ movieFormat }}\n    - Movie Style: {{ movieStyle }}\n    {% if series %}\n    - Series: {{ series }}\n    {% endif %}\n    - Duration: {{ durationUnit }} minutes\n    \n    {% if existingShortDescription %}\n    - Short Description: {{ existingShortDescription }}\n    {% endif %}\n    {% if existingLongDescription %}\n    - Current Long Description: {{ existingLongDescription }}\n    {% endif %}\n\n    Guidelines:\n    - Create a comprehensive description (200-400 words)\n    - Include character archetypes and motivations\n    - Outline the main story arc and conflict\n    - Describe the setting and atmosphere\n    - Include thematic elements that match the movie style\n    - Consider the runtime when planning story complexity\n    - Make it cinematically viable and engaging\n    - Include visual and emotional elements that would translate well to screen\n    {% if series %}\n    - Consider how this fits within the broader series: {{ series }}\n    - Include elements that could connect to other episodes/installments\n    {% endif %}\n\n    Structure the description with:\n    1. Setting and premise\n    2. Main characters and their goals\n    3. Central conflict or challenge\n    4. Key story beats\n    5. Thematic elements\n\n    Generate only the long description, no additional text or explanation.\n  \"#\n}\n\n// Batch Generation Function - Generates all fields at once\nfunction GenerateAllProjectFields(\n  projectName: string,\n  movieFormat: string,\n  movieStyle: string,\n  series: string?,\n  durationUnit: int,\n  existingTitle: string?,\n  existingShortDescription: string?,\n  existingLongDescription: string?\n) -> ProjectFieldsResponse {\n  client OpenRouterAdvanced\n  prompt #\"\n    You are a comprehensive movie development team including a creative writer, marketing content editor, and screenwriter. Generate all missing project fields for this movie project.\n\n    Project Context:\n    - Project Name: {{ projectName }}\n    - Movie Format: {{ movieFormat }}\n    - Movie Style: {{ movieStyle }}\n    {% if series %}\n    - Series: {{ series }}\n    {% endif %}\n    - Duration: {{ durationUnit }} minutes\n    \n    Existing Content:\n    {% if existingTitle %}\n    - Title: {{ existingTitle }}\n    {% endif %}\n    {% if existingShortDescription %}\n    - Short Description: {{ existingShortDescription }}\n    {% endif %}\n    {% if existingLongDescription %}\n    - Long Description: {{ existingLongDescription }}\n    {% endif %}\n\n    Generate the missing fields with these roles:\n    - Title: Creative writer creating memorable, marketable titles\n    - Short Description: Marketing editor creating compelling 50-100 word promotional copy\n    - Long Description: Screenwriter creating detailed 200-400 word story synopsis\n\n    Ensure all generated content is cohesive and consistent with each other and the project parameters.\n\n    Return the response in the exact JSON format specified by ProjectFieldsResponse.\n  \"#\n}\n\nclass ProjectFieldsResponse {\n  projectTitle string?\n  shortDescription string?\n  longDescription string?\n}\n",
}
export const getBamlFiles = () => {
    return fileMap;
}