import type { CollectionConfig } from 'payload'

export const Projects: CollectionConfig = {
  slug: 'projects',
  admin: {
    useAsTitle: 'name',
    defaultColumns: ['name', 'projectTitle', 'movieFormat', 'status', 'updatedAt'],
    group: 'Content',
  },
  access: {
    read: () => true,
    create: ({ req: { user } }) => {
      // All authenticated users can create projects
      return !!user
    },
    update: ({ req: { user } }) => {
      return !!user
    },
    delete: ({ req: { user } }) => {
      return !!user
    },
  },
  fields: [
    {
      name: 'name',
      type: 'text',
      required: true,
      admin: {
        description: 'Project identifier/name provided by user (e.g., "Adventure Story 1", "Mystery Episode 3")',
      },
    },
    {
      name: 'projectTitle',
      type: 'text',
      admin: {
        description: 'The actual title of the movie/episode (user-provided or auto-generated by frontend)',
      },
    },
    {
      name: 'shortDescription',
      type: 'textarea',
      admin: {
        description: 'Brief summary of the project (user-provided or auto-generated by frontend)',
      },
    },
    {
      name: 'longDescription',
      type: 'richText',
      admin: {
        description: 'Detailed description or synopsis of the project (user-provided or auto-generated by frontend)',
      },
    },
    {
      name: 'movieFormat',
      type: 'relationship',
      relationTo: 'movie-formats',
      required: true,
      admin: {
        description: 'The format type for this project (Short Film, Feature Film, Series, etc.)',
      },
    },
    {
      name: 'series',
      type: 'relationship',
      relationTo: 'series',
      admin: {
        description: 'Associated series (only required/visible when movieFormat is "Series")',
        condition: (data, siblingData) => {
          // Show this field only when movie format is series
          if (siblingData?.movieFormat && typeof siblingData.movieFormat === 'object') {
            return siblingData.movieFormat.slug === 'series'
          }
          return false
        },
      },
    },
    {
      name: 'movieStyle',
      type: 'relationship',
      relationTo: 'movie-styles',
      required: true,
      admin: {
        description: 'Visual/artistic style for AI generation',
      },
    },
    {
      name: 'status',
      type: 'select',
      required: true,
      defaultValue: 'draft',
      options: [
        {
          label: 'Draft',
          value: 'draft',
        },
        {
          label: 'In Progress',
          value: 'in-progress',
        },
        {
          label: 'Completed',
          value: 'completed',
        },
        {
          label: 'Archived',
          value: 'archived',
        },
      ],
      admin: {
        description: 'Current status of the project',
      },
    },
    {
      name: 'generatedContent',
      type: 'group',
      admin: {
        description: 'Container for AI-generated content and assets',
      },
      fields: [
        {
          name: 'script',
          type: 'richText',
          admin: {
            description: 'Generated screenplay/script content',
          },
        },
        {
          name: 'scenes',
          type: 'array',
          admin: {
            description: 'Generated scenes with text and media references',
          },
          fields: [
            {
              name: 'sceneNumber',
              type: 'number',
              required: true,
              admin: {
                description: 'Sequential scene number',
              },
            },
            {
              name: 'description',
              type: 'textarea',
              admin: {
                description: 'Scene description or script content',
              },
            },
            {
              name: 'media',
              type: 'relationship',
              relationTo: 'media',
              hasMany: true,
              admin: {
                description: 'Media assets associated with this scene',
              },
            },
          ],
        },
        {
          name: 'finalVideo',
          type: 'relationship',
          relationTo: 'media',
          admin: {
            description: 'Final assembled video file',
          },
        },
        {
          name: 'assets',
          type: 'relationship',
          relationTo: 'media',
          hasMany: true,
          admin: {
            description: 'All generated assets for this project',
          },
        },
      ],
    },
  ],
}
